{
  "openapi": "3.0.3",
  "info": {
    "title": "Executrip (Generated)",
    "version": "0.1.0"
  },
  "servers": [
    { "url": "http://localhost" }
  ],
  "paths": {
    "/api/": {
      "get": {
        "summary": "GET /api/",
        "operationId": "getRootApi",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MessageResponse" }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new resource",
        "operationId": "createRootApiResource",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MessageResponse" }
              }
            }
          }
        }
      }
    },
    "/api/{id}": {
      "put": {
        "summary": "Update a resource by ID",
        "operationId": "updateById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource updated successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MessageResponse" }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a resource by ID",
        "operationId": "deleteById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "description": "Resource deleted successfully" },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/Error" } }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/Error" } }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/Error" } }
            }
          }
        }
      }
    },
    "/api/guide/{id}": {
      "get": {
        "summary": "Retrieve a guide by ID",
        "operationId": "getGuideById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Guide" }
              }
            }
          }
        }
      }
    },
    "/api/addguide": {
      "post": {
        "summary": "Add a new guide",
        "operationId": "addGuide",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GuideInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Guide added successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Guide" }
              }
            }
          }
        }
      }
    },
    "/api/adduser": {
      "post": {
        "summary": "Add a new user",
        "operationId": "addUser",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": { "type": "string" },
                  "email": { "type": "string", "format": "email" },
                  "password": { "type": "string", "format": "password" }
                },
                "required": ["username", "email", "password"],
                "additionalProperties": true
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserCreated" }
              }
            }
          },
          "400": { "description": "Invalid input or missing fields" },
          "409": { "description": "User with provided username or email already exists" }
        }
      }
    },
    "/api/login": {
      "post": {
        "summary": "Login user",
        "operationId": "login",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": { "type": "string" },
                  "password": { "type": "string", "format": "password" }
                },
                "required": ["username", "password"],
                "additionalProperties": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/LoginResponse" }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/logout": {
      "post": {
        "summary": "Logs out the current user",
        "operationId": "logout",
        "responses": {
          "200": {
            "description": "Successfully logged out",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MessageResponse" },
                "examples": {
                  "ok": { "value": { "message": "Logged out successfully" } }
                }
              }
            }
          }
        }
      }
    },
    "/api/guides/{city}": {
      "get": {
        "summary": "Get guides for a specific city",
        "operationId": "getGuidesByCity",
        "parameters": [
          {
            "name": "city",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with guides for the specified city.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Guide" }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "MessageResponse": {
        "type": "object",
        "properties": {
          "message": { "type": "string" }
        },
        "required": ["message"]
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": { "type": "string" }
        },
        "required": ["message"]
      },
      "Guide": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "name": { "type": "string" },
          "city": { "type": "string" },
          "description": { "type": "string" }
        }
      },
      "GuideInput": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "city": { "type": "string" },
          "description": { "type": "string" }
        },
        "required": ["name", "city"]
      },
      "UserCreated": {
        "type": "object",
        "properties": {
          "message": { "type": "string", "example": "User added successfully" },
          "userId": { "type": "string", "format": "uuid", "description": "ID of the newly created user" }
        },
        "required": ["message", "userId"]
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": { "type": "string", "description": "Authentication token" }
        },
        "required": ["token"]
      }
    }
  }
}
